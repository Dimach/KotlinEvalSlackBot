group 'me.semoro'

version '0.0.0-snapshot'

buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        jcenter()
        maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "de.undercouch:gradle-download-task:3.1.1"
        classpath "com.bmuschko:gradle-docker-plugin:3.0.3"
    }
}


apply plugin: 'eclipse'
apply plugin: 'idea'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}


apply plugin: 'kotlin'
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'com.github.cy6erGn0m:kotlin-rxokhttp-websocket:0.0.1'
    compile 'com.github.salomonbrys.kotson:kotson:2.4.0'

    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21' //TODO change backend
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile 'io.github.microutils:kotlin-logging:1.3.2'

}

apply plugin: 'de.undercouch.download'
import de.undercouch.gradle.tasks.download.Download

task downloadKotlinCompiler(type: Download) {
    overwrite false
    acceptAnyCertificate true
    src "https://github.com/JetBrains/kotlin/releases/download/v${kotlin_version}/kotlin-compiler-${kotlin_version}.zip"
    dest new File(buildDir, "kotlin-compiler-${kotlin_version}.zip")
}

task unzipKotlinCompiler(dependsOn: downloadKotlinCompiler, type: Copy) {
    from zipTree(downloadKotlinCompiler.dest)
    into buildDir
}

apply plugin: 'application'

mainClassName = 'me.semoro.kesb.SlackConnector'
applicationDistribution.from("build/kotlinc") {
    into 'kotlinc'
}

apply plugin: 'com.bmuschko.docker-java-application'


docker {
    url = "unix:///var/run/docker.sock"
    javaApplication {
        maintainer = 'Simon Ogorodnik "sem-oro@yandex.ru"'
        tag = "semoro/kesb:${project.version}"
        ports = []
    }
    dockerDistTar {
        workingDir("/$applicationName-${project.version}")
    }
}